package lab1;

// Class that represents a Vehicle
public class Vehicle {

    // Static field to track the number of vehicles created (non-final)
    private static int vehicleCount = 0;

    // Final non-static field (read-only after initialization)
    private final String vinNumber;

    // Non-final instance fields
    private String make;
    private String model;
    private VehicleType vehicleType;

    // Static final constant (Max capacity for vehicles in the garage)
    private static final int MAX_CAPACITY = 100;

    // Initialization block (runs when an object is created)
    {
        System.out.println("Vehicle is being created!");
    }

    // Constructor using "this" keyword to refer to instance variables
    public Vehicle(String vinNumber, String make, String model, VehicleType vehicleType) {
        this.vinNumber = vinNumber;  // this refers to the instance field 'vinNumber'
        this.make = make;
        this.model = model;
        this.vehicleType = vehicleType;
        vehicleCount++;  // Increment static field
    }

    // Method overloading: Same method name but different parameters
    public void printDetails() {
        System.out.println("VIN: " + this.vinNumber + ", Make: " + make + ", Model: " + model);  // 'this' to refer to vinNumber
    }

    public void printDetails(boolean withType) {
        if (withType) {
            System.out.println("Type: " + vehicleType + ", VIN: " + vinNumber + ", Make: " + make + ", Model: " + model);
        } else {
            printDetails();
        }
    }

    // Getter for read-only field (vinNumber)
    public String getVinNumber() {
        return vinNumber;
    }

    // Static method to get the current vehicle count
    public static int getVehicleCount() {
        return vehicleCount;
    }

    public static int getMaxCapacity() {
        return MAX_CAPACITY;
    }
}

